#!/usr/local/bin/ruby

require 'rubygems'
require 'rush'

@local = Rush::Box.new('localhost')
@pwd   = @local[ENV['PWD']+"/"]

def show_help_message_and_exit
  puts <<-EOF 
NAME
    rename -- change file extensions easier than mv

SYNOPSIS
    rename [-h|--help]
    rename [-xqs] FILES .NEW_SUFFIX

EXAMPLE
    rename *.rhtml .html.erb

    
OPTIONS
    -x    Strip suffix
          rename -x foo.txt.bak
          foo.txt.bak -> foo.txt
        
    -q    Silence output
  
    -s    Safe mode.  Show output, but don't actually make changes.
  
    -h    Display this help message. (also works with --help)
  
Author:
    Jim Garvin, 2008
EOF
  exit
end

def main(args)
  flags            = ARGV.select{|a|a=~/^-/}.to_s
  args_minus_flags = ARGV.reject{|a|a=~/^-/}
  
  @quiet_mode   = flags =~ /q/
  @strip_suffix = flags =~ /x/
  @safe_mode    = flags =~ /s/
  
  if @strip_suffix
    strip_suffix_of_files(args_minus_flags)
  else
    suffix = args_minus_flags.pop
    change_suffix_of_files(args_minus_flags, suffix)
  end
end

def change_suffix_of_files(files, suffix)
  error_and_exit("You must specify at least one file.") if files.empty?
  error_and_exit("You must specify a suffix that begins with a period and has at least one character. (use -x flag if you just want to strip suffix)") if suffix.nil? || suffix !~ /^\..+/
  resuffix(files, suffix)
end

def strip_suffix_of_files(files)
  error_and_exit("You must specify at least one file.") if files.empty?
  resuffix(files, '')
end

def resuffix(files, suffix)
  @field_width = files.collect{|s|s.size}.max
  files.each do |f|
    file     = @pwd[f]
    new_name = file.name.sub(/\.[^.]+$/, suffix)
    printf("%#{@field_width}s -> %s\n", f, new_name) unless @quiet_mode
    file.rename new_name unless @safe_mode
  end
end

def error_and_exit(msg)
  STDERR.puts "Error: #{msg}\nFor usage type: \"rename --help\""
  exit
end

if ARGV.to_s.strip =~ /-h|--help/
  show_help_message_and_exit
else
  main(ARGV)
end



